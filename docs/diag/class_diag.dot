digraph "Class_Diagram"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  uscp [label="USCP",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  automaton_cell [label="{AutomatonCell\n|- type\l- cellCount\l- ID\l|+ AutomatonCell()\l+ getType()\l+ setType()\l+ getCount()\l+ setCount()\l+ getId()\l+ setId()\l+ incrementCount()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled" fontcolor="black"];
  cell [label="{Cell\n|- id\l- radius\l- senseRadius\l- eCadherin\l- EB\l|+ Cell()\l+ ~Cell()\l+ getId()\l+ setId()\l+ getRadius()\l+ setRadius()\l+ getSenseRadius()\l+ setSenseRadius()\l+ getCentroid()\l+ setCentroid()\l+ getECadherin()\l+ setECadherin()\l+ getEB()\l+ setEB()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled" fontcolor="black"];
  environment [label="{Environment\n||+ Environment()\l+ setupECM()\l+ createCells()\l- generatePtFreqMap()\l- drawLine()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled" fontcolor="black"];
  line [label="{Line\n|- id\l- numberOfPoints\l|+ Line()\l+ Line()\l+ Line()\l+ ~Line()\l+ getId()\l+ setId()\l+ getNumberOfPoints()\l+ getPoint()\l+ setPoint()\l+ getPointArray()\l+ setPointArray()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled" fontcolor="black"];
  point [label="{Point\n|- x\l- y\l- z\l|+ Point()\l+ Point()\l+ getX()\l+ setX()\l+ getY()\l+ setY()\l+ getZ()\l+ setZ()\l+ getVar()\l+ setVar()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled" fontcolor="black"];
  simulation [label="{Simulation\n||+ Simulation()\l+ generateOpId()\l+ simulate()\l- moveCells()\l- updateEB()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled" fontcolor="black"];
  simulation_param [label="{SimulationParameters\n|- latticeHeight\l- latticeWidth\l- latticeDepth\l- fiberLength\l- fiberCount\l|+ SimulationParameters()\l+ ~SimulationParameters()\l+ loadParameters()\l+ loadParametersFromFile()\l+ getFiberCount()\l+ setFiberCount()\l+ getFiberLength()\l+ getLatticeDepth()\l+ getLatticeHeight()\l+ getLatticeWidth()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled" fontcolor="black"];
  utilities [label="{Utilities\n|+ TYPE\l+ COUNT\l+ ID\l|+ Utilities()\l+ ~Utilities()\l+ generateECMFile()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled" fontcolor="black"];
  var [label="{Var\n|- varName\l- index\l- delta\l- value\l|+ Var()\l+ Var()\l+ ~Var()\l+ getVarName()\l+ setVarName()\l+ getIndex()\l+ setIndex()\l+ getDelta()\l+ setDelta()\l+ getValue()\l+ setValue()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled" fontcolor="black"];


  uscp -> automaton_cell [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica"];
  uscp -> cell [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica"];
  uscp -> environment [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica"];
  uscp -> simulation [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica"];
  uscp -> simulation_param [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica"];
  uscp -> utilities [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica"];

  cell -> point [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica"];

  environment -> automaton_cell [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica"];
  environment -> cell [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica"];
  environment -> line [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica"];
  environment -> point [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica"];
  environment -> simulation_param [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica"];
  environment -> var [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica"];

  line -> point [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica"];

  simulation -> automaton_cell [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica"];
  simulation -> cell [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica"];
  simulation -> point [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica"];
  simulation -> simulation_param [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica"];
  
  utilities -> automaton_cell [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica"];
  utilities -> simulation_param [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica"];
  
}
