digraph "Class_Diagram" {
	
	//----------------------------------------------------------------------------------------------
	edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];

node [fontname="Helvetica",fontsize="10",shape=record];
//----------------------------------------------------------------------------------------------

uscp [label="USCP",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];

//----------------------------------------------------------------------------------------------
automaton_cell [label="{AutomatonCell\n|- type\l- cellCount\l- ID\l|+ AutomatonCell()\l+ getType()\l+ setType()\l+ getCount()\l+ setCount()\l+ getId()\l+ setId()\l+ incrementCount()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled" fontcolor="black"];

//----------------------------------------------------------------------------------------------
cell [label="{Cell\n|- id\l- radius\l- senseRadius\l- eCadherin\l- EB\l- geneticCode[3]\l- age\l|+ Cell()\l+ ~Cell()\l+ getId()\l+ setId()\l+ getRadius()\l+ setRadius()\l+ getSenseRadius()\l+ setSenseRadius()\l+ getCentroid()\l+ setCentroid()\l+ getECadherin()\l+ setECadherin()\l+ getEB()\l+ setEB()\l+ getGeneticCode()\l+ setGeneticCode()\l+ getAge()\l+ setAge()\l+ incrementAge()\l+ getFavorableLocation()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled" fontcolor="black"];

//----------------------------------------------------------------------------------------------
environment [label="{Environment\n||+ Environment()\l+ setupECM()\l+ createCells()\l- generatePtFreqMap()\l- drawLine()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled" fontcolor="black"];

//----------------------------------------------------------------------------------------------
line [label="{Line\n|- id\l- numberOfPoints\l- point[]\l|+ Line()\l+ Line()\l+ Line()\l+ ~Line()\l+ getId()\l+ setId()\l+ getNumberOfPoints()\l+ getPoint()\l+ setPoint()\l+ getPointArray()\l+ setPointArray()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled" fontcolor="black"];

//----------------------------------------------------------------------------------------------
point [label="{Point\n|- x\l- y\l- z\l|+ Point()\l+ Point()\l+ getX()\l+ setX()\l+ getY()\l+ setY()\l+ getZ()\l+ setZ()\l+ getVar()\l+ setVar()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled" fontcolor="black"];

//----------------------------------------------------------------------------------------------
simulation [label="{Simulation\n||+ Simulation()\l+ generateOpId()\l+ simulate()\l- moveCells()\l- updateEB()\l- evolveGeneticCode()\l+ increaseAge()\l+ splitCell()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled" fontcolor="black"];

//----------------------------------------------------------------------------------------------
simulation_param [label="{SimulationParameters\n|- latticeHeight\l- latticeWidth\l- latticeDepth\l- fiberLength\l- fiberCount\l- cellCount\l- cellDivisionAge\l- alpha\l- maxIteration\l|+ SimulationParameters()\l+ ~SimulationParameters()\l+ loadParameters()\l+ loadParametersFromFile()\l+ getFiberCount()\l+ setFiberCount()\l+ getFiberLength()\l+ getLatticeDepth()\l+ getLatticeHeight()\l+ getLatticeWidth()\l+ getCellCount()\l+ getCellDivisonAge()\l+ getAlpha()\l+ getMaxIteration()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled" fontcolor="black"];

//----------------------------------------------------------------------------------------------
utilities [label=<<TABLE ALIGN="LEFT" CELLBORDER="0" CELLSPACING="0" ><TR><TD>Utilities</TD></TR><HR/><TR><TD ALIGN="LEFT">+ <u>TYPE</u></TD></TR><TR><TD ALIGN="LEFT">+ <U>COUNT</U></TD></TR><TR><TD ALIGN="LEFT">+ <U>ID</U></TD></TR><HR/><TR><TD ALIGN="LEFT">+ Utilities()</TD></TR><TR><TD ALIGN="LEFT">+ ~Utilities()</TD></TR><TR><TD ALIGN="LEFT">+ generateECMFile()</TD></TR><TR><TD ALIGN="LEFT">+ writeIteration()</TD></TR></TABLE>>,shape=plaintext,height=0.2,width=0.4,color="black", fillcolor="white", style="filled" fontcolor="black"];

//----------------------------------------------------------------------------------------------
var [label="{Var\n|- varName\l- index\l- delta\l- value\l|+ Var()\l+ Var()\l+ ~Var()\l+ getVarName()\l+ setVarName()\l+ getIndex()\l+ setIndex()\l+ getDelta()\l+ setDelta()\l+ getValue()\l+ setValue()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled" fontcolor="black"];

//----------------------------------------------------------------------------------------------
stem_cell [label="{StemCell\n||+ StemCell()\l+ divide()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled" fontcolor="black"];

//----------------------------------------------------------------------------------------------
ta_cell [label="{TACell\n||+ TACell()\l+ differentiate()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled" fontcolor="black"];


//----------------------------------------------------------------------------------------------
uscp -> automaton_cell [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];
uscp -> cell [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];
uscp -> environment [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];
uscp -> simulation [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];
uscp -> simulation_param [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];
uscp -> utilities [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];

cell -> point [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica" arrowhead=vee];
cell -> automaton_cell [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];
cell -> simulation_param [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];
cell -> stem_cell [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica" dir="back" arrowtail=empty];
cell -> ta_cell [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica" dir="back" arrowtail=empty];

environment -> automaton_cell [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];
environment -> cell [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];
environment -> line [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];
environment -> point [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];
environment -> simulation_param [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];
environment -> var [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];

line -> point [color="grey25",fontsize="10",style="solid" ,fontname="Helvetica" dir="back" arrowtail=ediamond];

simulation -> automaton_cell [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];
simulation -> cell [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];
simulation -> point [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];
simulation -> simulation_param [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];
simulation -> stem_cell [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];
simulation -> ta_cell [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];

utilities -> automaton_cell [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];
utilities -> simulation_param [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];
utilities -> cell [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];

stem_cell -> automaton_cell [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];
stem_cell -> simulation_param [color="grey25",fontsize="10",style="dashed" ,fontname="Helvetica",arrowhead=vee];

}




